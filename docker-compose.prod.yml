services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE_URL=http://localhost:4600
    ports:
      - "4601:80"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=http://localhost:4600
    networks:
      - photo-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    ports:
      - "4600:4600"
    env_file:
      - backend/.env
    environment:
      - NODE_ENV=production
      - PORT=4600
      - SERVER_URL=http://localhost:4600
      - MINIO_ENDPOINT=minio
      - MINIO_PORT=4610
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-photoadmin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-photo123456}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-photo-box}
      - MINIO_USE_SSL=false
    depends_on:
      minio:
        condition: service_healthy
    volumes:
      - backend-uploads:/app/uploads
      - backend-temp:/app/temp
    networks:
      - photo-network
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    ports:
      - "4610:4610"
      - "4620:4620"
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER:-photoadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD:-photo123456}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":4620" --address ":4610"
    networks:
      - photo-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4610/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      start_period: 40s

  minio-init:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    environment:
      - MINIO_ACCESS_KEY=${MINIO_ROOT_USER:-photoadmin}
      - MINIO_SECRET_KEY=${MINIO_ROOT_PASSWORD:-photo123456}
    entrypoint: >
      /bin/sh -c "
        mc alias set myminio http://minio:4610 $${MINIO_ACCESS_KEY} $${MINIO_SECRET_KEY} &&
        mc mb myminio/${MINIO_BUCKET_NAME:-photo-box} --ignore-existing &&
        echo 'âœ… MinIO bucket created successfully';
      "
    networks:
      - photo-network
    restart: "no"

volumes:
  backend-uploads:
  backend-temp:
  minio-data:

networks:
  photo-network:
    driver: bridge
